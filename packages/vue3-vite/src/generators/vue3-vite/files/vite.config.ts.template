import path from 'path'
import { defineConfig } from 'vite';
import Vue from '@vitejs/plugin-vue';
import Components from 'unplugin-vue-components/vite'
<% if (!useLocalAlias) { -%>
  import tsconfigBase from '../../tsconfig.base.json'
<% } %>

<% if (!useLocalAlias) { %>
  const rootOffset = '../..'

  const resolve = (p: string): string => path.resolve(__dirname, p)

  const tsconfigBaseAliases = (): Record<string, string> => {
    const paths = tsconfigBase.compilerOptions?.paths || []
    const aliases: Record<string, string> = {}
    for (const [name, path] of Object.entries(paths)) {
      const simplePath = path[0].replace('/*', '/')
      const relative = `${rootOffset}${simplePath}`
      if (name.includes('/*')) {
        const resolved = `${resolve(relative)}/`
        aliases[name.replace('/*', '/')] = resolved
      } else {
        aliases[name] = resolve(relative)
      }
    }
    return aliases
  }
<% } %>

export default defineConfig({
  assetsInclude:  /\.(pdf|jpg|png|svg)$/,
  resolve: {
    alias: {
      <% if (useLocalAlias) { %>
        '@assets/': `${path.resolve(__dirname, './src/assets')}/`,
        '@app/': `${path.resolve(__dirname, './src/app')}/`,
        '@public/': `${path.resolve(__dirname, './src/public')}/`,
      <% } else { %>
        ...tsconfigBaseAliases(),
        // Add your alias here.
      <% } %>
    },
  },
  publicDir: path.resolve(__dirname, './src/public'),
  plugins: [
    Vue(),
    Components({
      dirs: ['src/app/components'],
    }),
  ],
});
